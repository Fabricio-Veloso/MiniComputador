// O arquivo indexador possuirá estruturas todas com o mesmo tamanho, todas com  1 campo para um malloc de do tipo char e outro apra um long int.
//Nestes 2 campos haverão o nome do arquivo  e um endereço de memória.
// O nome do arquivo será correspondente ao nome do aquivo que cada arquivo to dipo indexador se referenciará.
//O campo do endereço de memória, um long int, também corresponderá com a posição do arquivocorreposndente no arquivo root.
// Todos os arquivos queserão registrados dentro do arquivo root serão seguidos um do outro, indescriminadamente, não importando seu tipo.
// Ao adicionar um novo arquivo, o mesmo será escrito no arquivo root e no ato terá seu endereço de memória tual,aonde foi escrito, retornado para a main, aonde será atrelado a uma variável.
//após isso o arquivo indexador será aberto em seu fim, uma no estrutura do tipo arquivo indexador será criada, ela receberá em seus respectivos campos,o nome do arquivo e seu indereço na memória persistente.
// quando necesário, o usuário buscará seu aquivo pelo nome, a função fseek irá de estrtura em estrutura pelo arquivo idexador, e usando a função reed, irá comaprar o nome de cada um com o do pedido, ao achar o aquivo de nome correspondente, retornará o long inte respectivo ao seu local na memória persistente.
// oarquivo indexador será fechado e o root será berto, a função fseeck irá até o arquivo com oendereço dememória correspodente e o lerá para o usuário de acordo com o pedido desejado.
// para editar o arquivo, pode ser usada uma função de comparação de arays e resscrer o novo aqruivo no root, atualizando seu endereço no arquivo indexador corresposndente.
